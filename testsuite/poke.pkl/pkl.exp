# pkl.exp - Compiler tests for poke
#
#   Copyright (C) 2018 Jose E. Marchesi
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 3 of the License, or
# (at your option) any later version.
# 
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 51 Franklin Street - Fifth Floor, Boston, MA 02110-1301, USA.

# Integers.

set test inth
poke_test_cmd "print 6h" {6H}

set test int16
poke_test_cmd "print (int<16>) 6" {6H}

set test uinth
poke_test_cmd "print 6hu" {6UH}

set test uint16
poke_test_cmd "print (uint<16>) 6" {6UH}


# Conversions.

set test int-to-int1-0
poke_test_cmd "print (int<1>) 0" {\(int<1>\) 0}

set test int-to-uint1-0
poke_test_cmd "print (uint<1>) 0" {\(uint<1>\) 0}

set test i32toi32
poke_test_cmd "print (int) 1" "1"

set test i32tou32
poke_test_cmd "print (uint32) 1" "1U"

set test i32toi64
poke_test_cmd "print (long) 1" "1L"

set test i32tou64
poke_test_cmd "print (uint64) 1" "1UL"

set test u2addi5
poke_test_cmd "print (uint<2>) 1 + (int<5>) 2" {\(uint<5>\) 3}

# Operations

set test addii
poke_test_cmd "print 3 + 4" "7"

set test addll
poke_test_cmd "print 3L + 4L" "7L"

set test addil
poke_test_cmd "print 3 + 4L" "7L"

set test addli
poke_test_cmd "print 3L + 4" "7L"

# Arrays

set test simplearray
poke_test_cmd "print \[0,1,2\]" {\[0,1,2\]}

set test arrayref
poke_test_cmd "print \[0,1,2\]\[1\]" "1"

# Sizeof TYPE

set test sizeof-type-int
poke_test_cmd "print sizeof int" {\[32UL b\]}

set test sizeof-type-long
poke_test_cmd "print sizeof long" {\[64UL b\]}

set test sizeof-array-type-ul
poke_test_cmd "print sizeof int\[2UL\]" {\[64UL b\]}

set test sizeof-array-type
poke_test_cmd "print sizeof int\[2\]" {\[64UL b\]}

set test sizeof-array-of-array-type
poke_test_cmd "print sizeof int\[2\]\[2\]" {\[128UL b\]}

set test sizeof-array-of-struct
poke_test_cmd "print sizeof struct {int;int;}\[2\]" {\[128UL b\]}

set test sizeof-struct-empty
poke_test_cmd "print sizeof struct {}" {\[0UL b\]}

set test sizeof-struct
poke_test_cmd "print sizeof struct { int; long; }" {\[96UL b\]}

set test sizeof-struct-with-struct
poke_test_cmd "print sizeof struct {int; struct {int;int;};}" \
    {\[96UL b\]}

set test sizeof-struct-with-struct-2
poke_test_cmd "print sizeof struct {int; struct {int;int;long;};}" \
    {\[160UL b\]}

set test sizeof-struct-with-array
poke_test_cmd "print sizeof struct {int; int\[5\]; int\[3\];}" \
    {\[288UL b\]}

set test sizeof-struct-with-intconstr
poke_test_cmd "print sizeof struct {int<5> foo; int<6> bar; int<7> baz;}" \
    {\[18UL b\]}

# Offsets

set test offsetB
poke_test_cmd "print \[12 B\]" {\[12 B\]}

set test offsetb
poke_test_cmd "print \[12 b\]" {\[12 b\]}

set test offset_exp
poke_test_cmd "print \[1 + 3 B\]" {\[4 B\]}

