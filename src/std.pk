/* std.pk - Standard definitions for poke.  */

/* Copyright (C) 2019 Jose E. Marchesi.  */

/* This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */

/* XXX: use the std:: namespace for all the definitions in this file.  */

/* Standard integral types.  */
/* XXX: these types should be immutable.  */

deftype bit = uint<1>;
deftype nibble = uint<4>;

deftype uint8 = uint<8>;
deftype uint16 = uint<16>;
deftype uint32 = uint<32>;
deftype uint64 = uint<64>;

deftype int8 = int<8>;
deftype int16 = int<16>;
deftype int32 = int<32>;
deftype int64 = int<64>;

deftype uint = uint32;
deftype int = int32;
deftype char = uint8;
deftype byte = uint8;
deftype ushort = uint16;
deftype short = int16;
deftype ulong = uint64;
deftype long = int64;

deftype off64 = offset<int64,b>;

/* String manipulation routines.  */

defun substr = (string s, int f, int t = s'length as int) string:
  {
   defvar res = "";
   defvar i = f;

   if (t < f)
     raise;

   /* XXX: use for (i in 0 to t)  */
   while (i < t)
     {
       res = res + s[i] as string;
       i = i + 1;
     }

   return res;
  }

defun strstr = (string s1, string s2) int:
  {
   defvar found = 0;
   defvar i = 0UL;
   
   while (!found && i < s2'length - s1'length)
     {
       found = s2[i..i + s1'length - 1] == s1;
       i = i + 1;
     }

   if (found)
     return i - 1;
   else
     return -1;
  }
