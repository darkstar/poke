deftype Elf_Half = uint<16>;
deftype Elf_Word = uint<32>;
deftype Elf64_Xword = uint<64>;
deftype Elf64_Addr = uint<64>;
deftype Elf64_Off = offset<uint<64>,B>;

deftype Elf64_Shdr =
  struct
  {
    Elf_Word sh_name;
    Elf_Word sh_type;
    Elf64_Xword sh_flags;
    Elf64_Addr sh_addr;
    Elf64_Off sh_offset;
    offset<Elf64_Xword,B> sh_size;
    Elf_Word sh_link;
    Elf_Word sh_info;
    Elf64_Xword sh_addralign;
    offset<Elf64_Xword,b> sh_entsize;
  };

deftype Elf_Ident =
  struct
  {
    byte[4] ei_mag : ei_mag[0] == 0x7fUB
                     && ei_mag[1] == 'E'
                     && ei_mag[2] == 'L'
                     && ei_mag[3] == 'F';

    byte ei_class;
    byte ei_data;
    byte ei_version;
    byte ei_osabi;
    byte ei_abiversion;
    byte[6] ei_pad;
    offset<byte,B> ei_nident;
  };

deftype Elf64_Ehdr =
  struct
  {
    Elf_Ident e_ident;

    Elf_Half e_type;
    Elf_Half e_machine;
    Elf_Word e_version;

    Elf64_Addr e_entry;
    Elf64_Off e_phoff;
    Elf64_Off e_shoff;

    Elf_Word e_flags;
    offset<Elf_Half,B> e_ehsize;
    offset<Elf_Half,B> e_phentsize;
    Elf_Half e_phnum;
    offset<Elf_Half,B> e_shentsize;
    Elf_Half e_shnum;
    Elf_Half e_shstrndx;
  };
